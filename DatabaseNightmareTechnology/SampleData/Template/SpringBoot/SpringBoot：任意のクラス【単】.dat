{"GenerateFileName":"@(Model.Values[\"classname\"][0]).java","Discription":"※インポートは生成しないので、Eclipseに書いてもらうこと。\r\n必要な情報\r\n・クラスコメント\r\n・クラス名\r\n・アノテーション（複数ある場合は\\nで繋げる）\r\n■フィールド（各1行）\r\n・アクセス修飾子\r\n・型\r\n・名前\r\n・コメント\r\n・デフォルト値（\"=\"や\";\"も書いてね。）\r\n・アノテーション（複数ある場合は\\nで繋げる）\r\n・メモ欄\r\n■メソッド（各1行）\r\n・アクセス修飾子\r\n・型\r\n・名前\r\n・メソッドコメント\r\n・戻り値（あれば）：デフォルトの戻り値（returnの横に書く奴）\r\n・戻り値コメント\r\n・アノテーション（複数ある場合は\\nで繋げる）\r\n・メモ欄\r\n■引数（各1行、複数可）\r\n・アノテーション1（なければ空欄にする）\r\n・型1\r\n・名前1\r\n・コメント1\r\n・アノテーション2（なければ空欄にする）\r\n・型2\r\n・名前2\r\n・コメント2\r\n…\r\n■メソッド内自由記述\r\n・記述内容（いくつでも）\r\n\r\n■例\r\nclassname,SampleClass\r\npackage,org.ginpaydo.domain.logic;\r\ncomment,サンプルクラス\r\nannotation,@RestController\\n@RequiredArgsConstructor\\n@CommonsLog\r\nfield#11,private final,DiscordUserService,discordUserService,Discord設定,;,@Autowired,特記無し\r\nfield#12,private,PayPalConfig,payPalConfig,PayPal設定,;,@Autowired,特記無し\r\nfield#13,private,MessageSource,msg,メッセージリソース,;,@Autowired,特記無し\r\n…\r\nmethod#1,public,String,getAuthorityList,権限一覧を取得する,\"\"\"\"\";\",権限一覧,\"@RequestMapping(value = \"\"/getAuthorityList\"\")\",特記無し\r\nmethod#2,public,String,purchase,権限購入の要求を行う,\"\"\"\"\";\",購入URL,\"@RequestMapping(value = \"\"/purchase\"\")\\n    @Transactional(rollbackFor = Exception.class)\",特記無し\r\n…\r\narguments#2,\"@RequestParam(defaultValue = \"\"\"\")\",String,discordUserId,購入希望者のDiscordId(Discord発行),\"@RequestParam(defaultValue = \"\"\"\")\",String,authorityId,購入したい権限Id(Discord発行)\r\n…\r\nfree#1,記述1,記述2\r\nfree#2,記述3,記述4,記述5\r\n…","TemplateBody":"package @(Model.Values[\"package\"][0])\r\n@{\r\n    var classAnnotation = \"\";\r\n    if(Model.Values[\"annotation\"].Count > 0){\r\n        var annotations = Model.Values[\"annotation\"][0].Split('$');\r\n        foreach(var item in annotations){\r\n            classAnnotation = classAnnotation + \"\\n\" + item;\r\n        }\r\n    }\r\n    classAnnotation = classAnnotation;\r\n}\r\n/**\r\n * @(Model.Values[\"comment\"][0])\r\n */@classAnnotation\r\npublic class @(Model.Values[\"classname\"][0]) {\r\n\r\n@foreach(var item in Model.ListedValues[\"field\"].Values){\r\n    // フィールド\r\n    @:/**\r\n    @: * @item[3]\r\n    @: */\r\n    if(!string.IsNullOrWhiteSpace(item[5])){\r\n    @:@item[5]\r\n    }\r\n    @:@item[0] @item[1] @item[2]@item[4]\r\n    @:\r\n}\r\n@foreach(var key in Model.ListedValues[\"method\"].Keys){\r\n    var method = Model.ListedValues[\"method\"][key];\r\n    // メソッド\r\n    var argumentsStr = \"\";\r\n    var argumentsComment = \"\";\r\n    if(Model.ListedValues[\"arguments\"].ContainsKey(key)){\r\n        // 引数\r\n        var argumentsValues = Model.ListedValues[\"arguments\"][key];\r\n        var numberOfArguments = argumentsValues.Count / 4;\r\n        for(int i = 0; i < numberOfArguments; i++){\r\n            if(!string.IsNullOrWhiteSpace(argumentsStr)){\r\n                argumentsStr = argumentsStr + \", \";\r\n            }\r\n            argumentsComment = argumentsComment + \"\\n     * @param \" + argumentsValues[i * 4 + 2] + \" \" + argumentsValues[i * 4 + 3];\r\n            argumentsStr = argumentsStr + argumentsValues[i * 4 + 0] + \" \" + argumentsValues[i * 4 + 1] + \" \" + argumentsValues[i * 4 + 2];\r\n        }\r\n    }\r\n    argumentsStr = \"(\" + argumentsStr + \")\";\r\n    var returnComment = \"\";\r\n    if(!string.IsNullOrWhiteSpace(method[5])){\r\n        returnComment = \"\\n     * @return \" + method[5];\r\n    }\r\n    var annotation = \"\";\r\n    if(!string.IsNullOrWhiteSpace(method[6])){\r\n        var annotations = method[6].Split('$');\r\n        foreach(var item in annotations){\r\n            annotation = annotation + \"\\n    \" + item;\r\n        }\r\n    }\r\n    annotation = annotation;\r\n    var free = \"\";\r\n    if(Model.ListedValues.ContainsKey(\"free\")){\r\n        if(Model.ListedValues[\"free\"].ContainsKey(key)){\r\n            // 自由記述\r\n            var freeValues = Model.ListedValues[\"free\"][key];\r\n            foreach(var freeitem in freeValues){\r\n                free = free + \"\\n        \" + freeitem;\r\n            }\r\n        }\r\n    }\r\n    @:\r\n    @:/**\r\n    @: * @method[3]@argumentsComment@returnComment\r\n    @: */@annotation\r\n    @:@method[0] @method[1] @method[2]@argumentsStr {@free\r\n    @:}\r\n}\r\n}"}