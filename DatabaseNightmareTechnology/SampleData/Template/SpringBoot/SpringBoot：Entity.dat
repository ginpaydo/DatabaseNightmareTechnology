{"GenerateFileName":"@(Model.Name.Pascal)Entity.java","Discription":"SpringBootのEntityクラス\r\n■必要な汎用入力\r\n・package,org.ginpaydo  // パッケージ名\r\n・データベース各データのJava用変換情報\r\n→[DB型名],[Java型名]","TemplateBody":"package @(Model.GeneralInput.Values[\"package\"][0]).domain.entity;\r\n\r\nimport java.math.BigDecimal;\r\n\r\nimport javax.persistence.Column;\r\nimport javax.persistence.Entity;\r\nimport javax.persistence.FetchType;\r\nimport javax.persistence.JoinColumn;\r\nimport javax.persistence.ManyToOne;\r\nimport javax.persistence.Table;\r\n\r\nimport lombok.Getter;\r\nimport lombok.Setter;\r\n\r\n/**\r\n * @(Model.Name.Camel)\r\n * @(Model.Comment)\r\n */\r\n@@Getter\r\n@@Setter\r\n@@Entity\r\n@@Table(name=\"@(Model.RawName)\")\r\npublic class @(Model.Name.Pascal)Entity extends AbstractEntity {\r\n\r\n    @foreach (var item in Model.Columns) {\r\n    \r\n    // null可能かどうかのバリデーション定義\r\n    string nullable = \"\";\r\n    if(!@item.IsNullable){\r\n        nullable = \", nullable = false\";\r\n    }\r\n    \r\n    // 文字列の場合、長さのバリデーション定義\r\n    string length = \"\";\r\n    if(@item.Length != \"\"){\r\n        length = \", length = \" + @item.Length;\r\n    }\r\n    \r\n    // 共通フィールドを除外する\r\n    string raw = item.Name.Raw;\r\n    if(@item.IsKey || @item.Name.Raw == \"created_at\" || @item.Name.Raw == \"created_by\" || @item.Name.Raw == \"updated_at\" || @item.Name.Raw == \"updated_by\" || @item.Name.Raw == \"deleted\"){\r\n        // 生成対象外\r\n    }else if(@item.IndexClass != null){\r\n    // 他のテーブルエンティティを参照するカラム\r\n    @:/**\r\n    @:* @item.Comment\r\n    @:*/\r\n    @:@@ManyToOne(fetch = FetchType.EAGER)\r\n    @:@@Column(name = \"@(item.Name.Raw)\"@(length)@(nullable))\r\n    @:private @(item.IndexClass)Entity @(item.Name.Camel);\r\n    @:\r\n    }else{\r\n    // 通常カラム\r\n    @:/**\r\n    @:* @item.Comment\r\n    @:*/\r\n    @:@@Column(name = \"@(item.Name.Raw)\"@(length)@(nullable))\r\n    @:private @(Model.GeneralInput.Values[item.DataType][0]) @(item.Name.Camel);\r\n    @:\r\n    }\r\n    // foreachここまで\r\n    }\r\n}"}