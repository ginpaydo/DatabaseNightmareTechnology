{"GenerateFileName":"@(Model.Name.Pascal)Service.java","Discription":"SpringBootのServiceクラス\r\n■必要な汎用入力\r\n・package,org.ginpaydo  // パッケージ名\r\n・データベース各データのJava用変換情報\r\n→[DB型名],[Java型名]","TemplateBody":"package @(Model.GeneralInput.Values[\"package\"][0]).jpa.service;\r\n\r\nimport java.util.List;\r\n\r\nimport @(Model.GeneralInput.Values[\"package\"][0]).jpa.entity.@(Model.Name.Pascal)Entity;\r\nimport @(Model.GeneralInput.Values[\"package\"][0]).jpa.repository.@(Model.Name.Pascal)Repository;\r\nimport org.springframework.stereotype.Service;\r\n\r\nimport lombok.RequiredArgsConstructor;\r\nimport lombok.extern.apachecommons.CommonsLog;\r\n\r\n@@Service\r\n@@RequiredArgsConstructor\r\n@@CommonsLog\r\npublic class @(Model.Name.Pascal)Service {\r\n    private final @(Model.Name.Pascal)Repository @(Model.Name.Camel)Repository;\r\n\r\n    /**\r\n     * レコードを作成または更新する\r\n     * @@param @(Model.Name.Camel) 更新データ\r\n     * @@return 正常に更新できたか（現在はtrue固定）\r\n     */\r\n    public boolean createOrUpdate(@(Model.Name.Pascal)Entity @(Model.Name.Camel)) {\r\n        log.info(\"createOrUpdate:\" + @(Model.Name.Camel).getId());\r\n        @(Model.Name.Camel)Repository.save(@(Model.Name.Camel));\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * レコードを検索する\r\n     * @@param @(Model.KeyName.Camel)\r\n     * @@return 条件に合ったデータ\r\n     */\r\n    public List<@(Model.Name.Pascal)> findBy@(Model.KeyName.Pascal)(@(Model.GeneralInput.Values[Model.KeyDataType][0]) @(Model.KeyName.Camel)) {\r\n        log.info(\"findBy@(Model.KeyName.Pascal):\" + @(Model.KeyName.Camel));\r\n        return @(Model.Name.Camel)Repository.findBy@(Model.KeyName.Pascal)(@(Model.KeyName.Camel));\r\n    }\r\n\r\n    /**\r\n     * レコードを削除する\r\n     * @@param @(Model.KeyName.Camel)\r\n     * @@return 削除したならばtrue\r\n     */\r\n    public boolean delete(@(Model.GeneralInput.Values[Model.KeyDataType][0]) @(Model.KeyName.Camel)) {\r\n        log.info(\"delete:\" + @(Model.KeyName.Camel));\r\n        int before = count();\r\n        @(Model.Name.Camel)Repository.deleteById(@(Model.KeyName.Camel));\r\n        int after = count();\r\n        return (before - after) > 0;\r\n    }\r\n\r\n    /**\r\n     * データ件数を確認する\r\n     * @@return データ件数\r\n     */\r\n    public int count() {\r\n        return @(Model.Name.Camel)Repository.findAll().size();\r\n    }\r\n}"}