<UserControl x:Class="DatabaseNightmareTechnology.Views.HomeUserControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:local="clr-namespace:DatabaseNightmareTechnology.Views"
             xmlns:prism="http://prismlibrary.com/"
             prism:ViewModelLocator.AutoWireViewModel="True"
             mc:Ignorable="d"
             xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
             TextElement.Foreground="{DynamicResource MaterialDesignBody}"
             Background="{DynamicResource MaterialDesignPaper}"
             FontFamily="{DynamicResource MaterialDesignFont}"
             d:DesignHeight="300" d:DesignWidth="300">
    <Grid>
        <TextBlock FontFamily="Meiryo UI">
            ■Razorメモ<LineBreak/>
            ・DBを利用した一括生成フィールドの参照<LineBreak/>
            @(Model.TableNamePascal)<LineBreak/>
            ・汎用入力のフィールド参照<LineBreak/>
            @(Model.Values["フィールド名"][列番号])<LineBreak/>
            @(Model.ListedValues["リスト名"][列番号])<LineBreak/>
            列番号は、CSVファイルの2列目が0,3列目が1,…<LineBreak/>
            ■汎用入力データ：CSVファイルメモ<LineBreak/>
            ・1行1データ、1列目はフィールド名、2列目からパラメータ<LineBreak/>
            ・フィールド名は'#'で区切ることでリスト化できる<LineBreak/>
            (例)<LineBreak/>
            "リスト名#フィールド名1"<LineBreak/>
            "リスト名#フィールド名2"<LineBreak/>
            '#'は1行1個まで、階層的にリストを作ることはできない<LineBreak/>
        </TextBlock>
    </Grid>
</UserControl>
